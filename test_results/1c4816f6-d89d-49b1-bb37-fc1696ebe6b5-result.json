{"name": "test_buy_product_2", "status": "broken", "statusDetails": {"message": "selenium.common.exceptions.SessionNotCreatedException: Message: session not created\nfrom no such execution context: uniqueContextId not found\n  (Session info: chrome=115.0.5790.173)\nStacktrace:\nBacktrace:\n\tGetHandleVerifier [0x009EA813+48355]\n\t(No symbol) [0x0097C4B1]\n\t(No symbol) [0x00885358]\n\t(No symbol) [0x008789B0]\n\t(No symbol) [0x00877138]\n\t(No symbol) [0x008777AA]\n\t(No symbol) [0x00888417]\n\t(No symbol) [0x008899E1]\n\t(No symbol) [0x00889A80]\n\t(No symbol) [0x008D1F1B]\n\t(No symbol) [0x008D093C]\n\t(No symbol) [0x008CA536]\n\t(No symbol) [0x008A82DC]\n\t(No symbol) [0x008A93DD]\n\tGetHandleVerifier [0x00C4AABD+2539405]\n\tGetHandleVerifier [0x00C8A78F+2800735]\n\tGetHandleVerifier [0x00C8456C+2775612]\n\tGetHandleVerifier [0x00A751E0+616112]\n\t(No symbol) [0x00985F8C]\n\t(No symbol) [0x00982328]\n\t(No symbol) [0x0098240B]\n\t(No symbol) [0x00974FF7]\n\tBaseThreadInitThunk [0x75406359+25]\n\tRtlGetAppContainerNamedObjectPath [0x77457A94+228]\n\tRtlGetAppContainerNamedObjectPath [0x77457A64+180]", "trace": "@allure.description('Test of buying products № 2')\n    def test_buy_product_2():\n        options = webdriver.ChromeOptions()\n        options.add_experimental_option(\"detach\", True)  # False/True Закрытие/нет браузера\n        options.page_load_strategy = 'normal' # normal/eager/none загружать/нет полностью страницы\n>       driver = webdriver.Chrome(options=options, service=Service())\n\ntests\\test_buy_2_products.py:17: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\nC:\\Python311\\Lib\\site-packages\\selenium\\webdriver\\chrome\\webdriver.py:49: in __init__\n    super().__init__(\nC:\\Python311\\Lib\\site-packages\\selenium\\webdriver\\chromium\\webdriver.py:54: in __init__\n    super().__init__(\nC:\\Python311\\Lib\\site-packages\\selenium\\webdriver\\remote\\webdriver.py:206: in __init__\n    self.start_session(capabilities)\nC:\\Python311\\Lib\\site-packages\\selenium\\webdriver\\remote\\webdriver.py:291: in start_session\n    response = self.execute(Command.NEW_SESSION, caps)[\"value\"]\nC:\\Python311\\Lib\\site-packages\\selenium\\webdriver\\remote\\webdriver.py:346: in execute\n    self.error_handler.check_response(response)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <selenium.webdriver.remote.errorhandler.ErrorHandler object at 0x000002649D232490>\nresponse = {'status': 500, 'value': '{\"value\":{\"error\":\"session not created\",\"message\":\"session not created\\\\nfrom no such execut...\\n\\\\tRtlGetAppContainerNamedObjectPath [0x77457A94+228]\\\\n\\\\tRtlGetAppContainerNamedObjectPath [0x77457A64+180]\\\\n\"}}'}\n\n    def check_response(self, response: Dict[str, Any]) -> None:\n        \"\"\"Checks that a JSON response from the WebDriver does not have an\n        error.\n    \n        :Args:\n         - response - The JSON response from the WebDriver server as a dictionary\n           object.\n    \n        :Raises: If the response contains an error message.\n        \"\"\"\n        status = response.get(\"status\", None)\n        if not status or status == ErrorCode.SUCCESS:\n            return\n        value = None\n        message = response.get(\"message\", \"\")\n        screen: str = response.get(\"screen\", \"\")\n        stacktrace = None\n        if isinstance(status, int):\n            value_json = response.get(\"value\", None)\n            if value_json and isinstance(value_json, str):\n                import json\n    \n                try:\n                    value = json.loads(value_json)\n                    if len(value) == 1:\n                        value = value[\"value\"]\n                    status = value.get(\"error\", None)\n                    if not status:\n                        status = value.get(\"status\", ErrorCode.UNKNOWN_ERROR)\n                        message = value.get(\"value\") or value.get(\"message\")\n                        if not isinstance(message, str):\n                            value = message\n                            message = message.get(\"message\")\n                    else:\n                        message = value.get(\"message\", None)\n                except ValueError:\n                    pass\n    \n        exception_class: Type[WebDriverException]\n        if status in ErrorCode.NO_SUCH_ELEMENT:\n            exception_class = NoSuchElementException\n        elif status in ErrorCode.NO_SUCH_FRAME:\n            exception_class = NoSuchFrameException\n        elif status in ErrorCode.NO_SUCH_SHADOW_ROOT:\n            exception_class = NoSuchShadowRootException\n        elif status in ErrorCode.NO_SUCH_WINDOW:\n            exception_class = NoSuchWindowException\n        elif status in ErrorCode.STALE_ELEMENT_REFERENCE:\n            exception_class = StaleElementReferenceException\n        elif status in ErrorCode.ELEMENT_NOT_VISIBLE:\n            exception_class = ElementNotVisibleException\n        elif status in ErrorCode.INVALID_ELEMENT_STATE:\n            exception_class = InvalidElementStateException\n        elif (\n            status in ErrorCode.INVALID_SELECTOR\n            or status in ErrorCode.INVALID_XPATH_SELECTOR\n            or status in ErrorCode.INVALID_XPATH_SELECTOR_RETURN_TYPER\n        ):\n            exception_class = InvalidSelectorException\n        elif status in ErrorCode.ELEMENT_IS_NOT_SELECTABLE:\n            exception_class = ElementNotSelectableException\n        elif status in ErrorCode.ELEMENT_NOT_INTERACTABLE:\n            exception_class = ElementNotInteractableException\n        elif status in ErrorCode.INVALID_COOKIE_DOMAIN:\n            exception_class = InvalidCookieDomainException\n        elif status in ErrorCode.UNABLE_TO_SET_COOKIE:\n            exception_class = UnableToSetCookieException\n        elif status in ErrorCode.TIMEOUT:\n            exception_class = TimeoutException\n        elif status in ErrorCode.SCRIPT_TIMEOUT:\n            exception_class = TimeoutException\n        elif status in ErrorCode.UNKNOWN_ERROR:\n            exception_class = WebDriverException\n        elif status in ErrorCode.UNEXPECTED_ALERT_OPEN:\n            exception_class = UnexpectedAlertPresentException\n        elif status in ErrorCode.NO_ALERT_OPEN:\n            exception_class = NoAlertPresentException\n        elif status in ErrorCode.IME_NOT_AVAILABLE:\n            exception_class = ImeNotAvailableException\n        elif status in ErrorCode.IME_ENGINE_ACTIVATION_FAILED:\n            exception_class = ImeActivationFailedException\n        elif status in ErrorCode.MOVE_TARGET_OUT_OF_BOUNDS:\n            exception_class = MoveTargetOutOfBoundsException\n        elif status in ErrorCode.JAVASCRIPT_ERROR:\n            exception_class = JavascriptException\n        elif status in ErrorCode.SESSION_NOT_CREATED:\n            exception_class = SessionNotCreatedException\n        elif status in ErrorCode.INVALID_ARGUMENT:\n            exception_class = InvalidArgumentException\n        elif status in ErrorCode.NO_SUCH_COOKIE:\n            exception_class = NoSuchCookieException\n        elif status in ErrorCode.UNABLE_TO_CAPTURE_SCREEN:\n            exception_class = ScreenshotException\n        elif status in ErrorCode.ELEMENT_CLICK_INTERCEPTED:\n            exception_class = ElementClickInterceptedException\n        elif status in ErrorCode.INSECURE_CERTIFICATE:\n            exception_class = InsecureCertificateException\n        elif status in ErrorCode.INVALID_COORDINATES:\n            exception_class = InvalidCoordinatesException\n        elif status in ErrorCode.INVALID_SESSION_ID:\n            exception_class = InvalidSessionIdException\n        elif status in ErrorCode.UNKNOWN_METHOD:\n            exception_class = UnknownMethodException\n        else:\n            exception_class = WebDriverException\n        if not value:\n            value = response[\"value\"]\n        if isinstance(value, str):\n            raise exception_class(value)\n        if message == \"\" and \"message\" in value:\n            message = value[\"message\"]\n    \n        screen = None  # type: ignore[assignment]\n        if \"screen\" in value:\n            screen = value[\"screen\"]\n    \n        stacktrace = None\n        st_value = value.get(\"stackTrace\") or value.get(\"stacktrace\")\n        if st_value:\n            if isinstance(st_value, str):\n                stacktrace = st_value.split(\"\\n\")\n            else:\n                stacktrace = []\n                try:\n                    for frame in st_value:\n                        line = frame.get(\"lineNumber\", \"\")\n                        file = frame.get(\"fileName\", \"<anonymous>\")\n                        if line:\n                            file = f\"{file}:{line}\"\n                        meth = frame.get(\"methodName\", \"<anonymous>\")\n                        if \"className\" in frame:\n                            meth = f\"{frame['className']}.{meth}\"\n                        msg = \"    at %s (%s)\"\n                        msg = msg % (meth, file)\n                        stacktrace.append(msg)\n                except TypeError:\n                    pass\n        if exception_class == UnexpectedAlertPresentException:\n            alert_text = None\n            if \"data\" in value:\n                alert_text = value[\"data\"].get(\"text\")\n            elif \"alert\" in value:\n                alert_text = value[\"alert\"].get(\"text\")\n            raise exception_class(message, screen, stacktrace, alert_text)  # type: ignore[call-arg]  # mypy is not smart enough here\n>       raise exception_class(message, screen, stacktrace)\nE       selenium.common.exceptions.SessionNotCreatedException: Message: session not created\nE       from no such execution context: uniqueContextId not found\nE         (Session info: chrome=115.0.5790.173)\nE       Stacktrace:\nE       Backtrace:\nE       \tGetHandleVerifier [0x009EA813+48355]\nE       \t(No symbol) [0x0097C4B1]\nE       \t(No symbol) [0x00885358]\nE       \t(No symbol) [0x008789B0]\nE       \t(No symbol) [0x00877138]\nE       \t(No symbol) [0x008777AA]\nE       \t(No symbol) [0x00888417]\nE       \t(No symbol) [0x008899E1]\nE       \t(No symbol) [0x00889A80]\nE       \t(No symbol) [0x008D1F1B]\nE       \t(No symbol) [0x008D093C]\nE       \t(No symbol) [0x008CA536]\nE       \t(No symbol) [0x008A82DC]\nE       \t(No symbol) [0x008A93DD]\nE       \tGetHandleVerifier [0x00C4AABD+2539405]\nE       \tGetHandleVerifier [0x00C8A78F+2800735]\nE       \tGetHandleVerifier [0x00C8456C+2775612]\nE       \tGetHandleVerifier [0x00A751E0+616112]\nE       \t(No symbol) [0x00985F8C]\nE       \t(No symbol) [0x00982328]\nE       \t(No symbol) [0x0098240B]\nE       \t(No symbol) [0x00974FF7]\nE       \tBaseThreadInitThunk [0x75406359+25]\nE       \tRtlGetAppContainerNamedObjectPath [0x77457A94+228]\nE       \tRtlGetAppContainerNamedObjectPath [0x77457A64+180]\n\nC:\\Python311\\Lib\\site-packages\\selenium\\webdriver\\remote\\errorhandler.py:245: SessionNotCreatedException"}, "description": "Test of buying products № 2", "start": 1692602902824, "stop": 1692602907383, "uuid": "210b36c9-1b4f-4331-a465-9a2809266127", "historyId": "7b410d04d64b8371e574e867c66f1fbd", "testCaseId": "7b410d04d64b8371e574e867c66f1fbd", "fullName": "tests.test_buy_2_products#test_buy_product_2", "labels": [{"name": "parentSuite", "value": "tests"}, {"name": "suite", "value": "test_buy_2_products"}, {"name": "host", "value": "WIN-0GBLDR52NDP"}, {"name": "thread", "value": "12204-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "tests.test_buy_2_products"}]}